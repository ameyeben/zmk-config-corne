/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E       &kp R               &kp T        &kp Y    &kp U            &kp I       &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D       &kp F               &kp G        &kp H    &kp J            &kp K       &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C       &kp V               &kp B        &kp N    &kp M            &kp COMMA   &kp DOT  &kp FSLH  &kp ESC
                         &kp ESCAPE  &lt 1 LEFT_BRACKET  &kp SPACE    &kp RET  &lt 2 BACKSPACE  &kp DELETE
            >;
        };

        nav_layer {
            bindings = <
&trans  &none         &none             &none         &none           &none        &trans      &kp K_PASTE  &kp K_COPY  &kp K_CUT     &kp K_UNDO  &kp BSPC
&trans  &kp LEFT_GUI  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_SHIFT  &none        &caps_word  &kp DOWN     &kp DOWN    &kp UP_ARROW  &kp RIGHT   &trans
&trans  &trans        &trans            &trans        &trans          &trans       &trans      &trans       &trans      &trans        &trans      &trans
                                        &kp ESCAPE    &trans          &kp SPACE    &kp RET     &trans       &kp RALT
            >;
        };

        raise_layer {
            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        tri_layer {
            bindings = <
&none       &bootloader   &none         &none         &none         &none           &none     &none     &none     &none      &none   &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&none       &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };
    };
};
